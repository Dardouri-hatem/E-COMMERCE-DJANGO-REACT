{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dardo\\\\Desktop\\\\e-commerce\\\\frontend\\\\src\\\\components\\\\Products\\\\checkout.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Order from \"./order\";\n\nconst CheckoutForm = ({\n  success\n}) => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      console.log(stripe);\n      const {\n        id\n      } = paymentMethod; // try {\n      //   const { data } = await axios.post(\"/api/charge\", { id, amount: 1099 });\n      //   console.log(data);\n      //   success();\n      // } catch (error) {\n      //   console.log(error);\n      // }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mt-3 mr-5\",\n    onSubmit: handleSubmit,\n    style: {\n      width: \"50%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form // onSubmit={this.handleSubmit} success={success} error={error}\n    , {\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        required: true,\n        name: \"street_address\",\n        placeholder: \"Street address\" // onChange={this.handleChange}\n        // value={formData.street_address}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        required: true,\n        name: \"apartment_address\",\n        placeholder: \"Apartment address\" // onChange={this.handleChange}\n        // value={formData.apartment_address}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        required: true,\n        children: /*#__PURE__*/_jsxDEV(Select // loading={countries.length < 1}\n        , {\n          fluid: true,\n          clearable: true,\n          search: true // options={countries}\n          ,\n          name: \"country\",\n          placeholder: \"Country\" // onChange={this.handleSelectChange}\n          // value={formData.country}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        required: true,\n        name: \"zip\",\n        placeholder: \"Zip code\" // onChange={this.handleChange}\n        // value={formData.zip}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Checkbox, {\n        name: \"default\",\n        label: \"Make this the default address?\" // onChange={this.handleToggleDefault}\n        // checked={formData.default}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Would you complete your purchase ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !stripe,\n      style: {\n        width: \"100%\"\n      },\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}; // you should use env variables here to not commit this\n// but it is a public key anyway, so not as sensitive\n\n\n_s(CheckoutForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nconst stripePromise = loadStripe(\"pk_test_51HpWUdAHdk3LQCR4NdO1v4XGdIci4KVffOBjlY3p84Y65CDxa2wz3NgaGAxoLDAFDbh8UoAy85cqHWNd5I5MyypH00fcFtkQqs\");\n\nconst Index = () => {\n  _s2();\n\n  const [status, setStatus] = React.useState(\"ready\");\n\n  if (status === \"success\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Congrats on your payment!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CheckoutForm, {\n        success: () => {\n          setStatus(\"success\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Index, \"rZIcqvLNkUw+2PDMTi/XaO7+k8c=\");\n\n_c2 = Index;\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"Index\");","map":{"version":3,"sources":["C:/Users/dardo/Desktop/e-commerce/frontend/src/components/Products/checkout.js"],"names":["React","useEffect","loadStripe","Elements","CardElement","useStripe","useElements","Button","Form","axios","Order","CheckoutForm","success","stripe","elements","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","console","log","id","width","stripePromise","Index","status","setStatus","useState","display"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n  Elements,\r\n  CardElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { Button,Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Order from \"./order\";\r\n\r\nconst CheckoutForm = ({ success }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (!error) {\r\n      console.log(stripe);\r\n      const { id } = paymentMethod;\r\n\r\n      // try {\r\n      //   const { data } = await axios.post(\"/api/charge\", { id, amount: 1099 });\r\n      //   console.log(data);\r\n      //   success();\r\n      // } catch (error) {\r\n      //   console.log(error);\r\n      // }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"mt-3 mr-5\"\r\n      onSubmit={handleSubmit}\r\n      style={{ width: \"50%\" }}\r\n    >\r\n      <Form \r\n      // onSubmit={this.handleSubmit} success={success} error={error}\r\n      >\r\n        <Form.Input\r\n          required\r\n          name=\"street_address\"\r\n          placeholder=\"Street address\"\r\n          // onChange={this.handleChange}\r\n          // value={formData.street_address}\r\n        />\r\n        <Form.Input\r\n          required\r\n          name=\"apartment_address\"\r\n          placeholder=\"Apartment address\"\r\n          // onChange={this.handleChange}\r\n          // value={formData.apartment_address}\r\n        />\r\n        <Form.Field required>\r\n          <Select\r\n            // loading={countries.length < 1}\r\n            fluid\r\n            clearable\r\n            search\r\n            // options={countries}\r\n            name=\"country\"\r\n            placeholder=\"Country\"\r\n            // onChange={this.handleSelectChange}\r\n            // value={formData.country}\r\n          />\r\n        </Form.Field>\r\n        <Form.Input\r\n          required\r\n          name=\"zip\"\r\n          placeholder=\"Zip code\"\r\n          // onChange={this.handleChange}\r\n          // value={formData.zip}\r\n        />\r\n        <Form.Checkbox\r\n          name=\"default\"\r\n          label=\"Make this the default address?\"\r\n          // onChange={this.handleToggleDefault}\r\n          // checked={formData.default}\r\n        />\r\n      </Form>\r\n      <h3>Would you complete your purchase ?</h3>\r\n      <CardElement />\r\n      <Button type=\"submit\" disabled={!stripe} style={{ width: \"100%\" }}>\r\n        Pay\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// you should use env variables here to not commit this\r\n// but it is a public key anyway, so not as sensitive\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HpWUdAHdk3LQCR4NdO1v4XGdIci4KVffOBjlY3p84Y65CDxa2wz3NgaGAxoLDAFDbh8UoAy85cqHWNd5I5MyypH00fcFtkQqs\"\r\n);\r\n\r\nconst Index = () => {\r\n  const [status, setStatus] = React.useState(\"ready\");\r\n\r\n  if (status === \"success\") {\r\n    return <div>Congrats on your payment!</div>;\r\n  }\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <div style={{ display: \"flex\" }}>\r\n        <CheckoutForm\r\n          success={() => {\r\n            setStatus(\"success\");\r\n          }}\r\n        />\r\n        <Order />\r\n      </div>\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}