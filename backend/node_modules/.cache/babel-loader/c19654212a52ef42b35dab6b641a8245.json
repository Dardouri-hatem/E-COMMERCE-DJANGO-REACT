{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dardo\\\\Desktop\\\\e-commerce\\\\frontend\\\\src\\\\components\\\\Products\\\\checkout.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\n\nconst CheckoutForm = ({\n  success\n}) => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      console.log(pay);\n      const {\n        id\n      } = paymentMethod;\n\n      try {\n        const {\n          data\n        } = await axios.post(\"/api/charge\", {\n          id,\n          amount: 1099\n        });\n        console.log(data);\n        success();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      maxWidth: \"400px\",\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Price: $10.99 USD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://images.ricardocuisine.com/services/recipes/500x675_7700.jpg\",\n      style: {\n        maxWidth: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}; // you should use env variables here to not commit this\n// but it is a public key anyway, so not as sensitive\n\n\n_s(CheckoutForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nconst stripePromise = loadStripe(\"pk_test_51HpWUdAHdk3LQCR4NdO1v4XGdIci4KVffOBjlY3p84Y65CDxa2wz3NgaGAxoLDAFDbh8UoAy85cqHWNd5I5MyypH00fcFtkQqs\");\n\nconst Index = () => {\n  _s2();\n\n  const [status, setStatus] = React.useState(\"ready\");\n\n  if (status === \"success\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Congrats on your empanadas!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n      success: () => {\n        setStatus(\"success\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Index, \"rZIcqvLNkUw+2PDMTi/XaO7+k8c=\");\n\n_c2 = Index;\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"Index\");","map":{"version":3,"sources":["C:/Users/dardo/Desktop/e-commerce/frontend/src/components/Products/checkout.js"],"names":["React","loadStripe","Elements","CardElement","useStripe","useElements","axios","CheckoutForm","success","stripe","elements","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","console","log","pay","id","data","post","amount","maxWidth","margin","stripePromise","Index","status","setStatus","useState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,WAJF,QAKO,yBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACpC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;;AAEA,QAAMM,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoBhB,WAApB;AAF0D,KAA3B,CAAvC;;AAKA,QAAI,CAACW,KAAL,EAAY;AACVM,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,YAAM;AAAEC,QAAAA;AAAF,UAASR,aAAf;;AAEA,UAAI;AACF,cAAM;AAAES,UAAAA;AAAF,YAAW,MAAMlB,KAAK,CAACmB,IAAN,CAAW,aAAX,EAA0B;AAAEF,UAAAA,EAAF;AAAMG,UAAAA,MAAM,EAAE;AAAd,SAA1B,CAAvB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAhB,QAAAA,OAAO;AACR,OAJD,CAIE,OAAOM,KAAP,EAAc;AACdM,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD;AACF;AACF,GApBD;;AAsBA,sBACE;AACE,IAAA,QAAQ,EAAEH,YADZ;AAEE,IAAA,KAAK,EAAE;AAAEgB,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,MAAM,EAAE;AAA7B,KAFT;AAAA,4BAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AACE,MAAA,GAAG,EAAC,qEADN;AAEE,MAAA,KAAK,EAAE;AAAED,QAAAA,QAAQ,EAAE;AAAZ;AAFT;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAAClB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1CD,C,CA4CA;AACA;;;GA7CMF,Y;UACWH,S,EACEC,W;;;KAFbE,Y;AA8CN,MAAMsB,aAAa,GAAG5B,UAAU,CAC9B,6GAD8B,CAAhC;;AAIA,MAAM6B,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhC,KAAK,CAACiC,QAAN,CAAe,OAAf,CAA5B;;AAEA,MAAIF,MAAM,KAAK,SAAf,EAA0B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEF,aAAlB;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbG,QAAAA,SAAS,CAAC,SAAD,CAAT;AACD;AAHH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhBD;;IAAMF,K;;MAAAA,K;AAkBN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport {\r\n  Elements,\r\n  CardElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\nimport axios from \"axios\";\r\n\r\nconst CheckoutForm = ({ success }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (!error) {\r\n      console.log(pay)\r\n      const { id } = paymentMethod;\r\n\r\n      try {\r\n        const { data } = await axios.post(\"/api/charge\", { id, amount: 1099 });\r\n        console.log(data);\r\n        success();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      style={{ maxWidth: \"400px\", margin: \"0 auto\" }}\r\n    >\r\n      <h2>Price: $10.99 USD</h2>\r\n      <img\r\n        src=\"https://images.ricardocuisine.com/services/recipes/500x675_7700.jpg\"\r\n        style={{ maxWidth: \"50px\" }}\r\n      />\r\n      <CardElement />\r\n      <button type=\"submit\" disabled={!stripe}>\r\n        Pay\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// you should use env variables here to not commit this\r\n// but it is a public key anyway, so not as sensitive\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HpWUdAHdk3LQCR4NdO1v4XGdIci4KVffOBjlY3p84Y65CDxa2wz3NgaGAxoLDAFDbh8UoAy85cqHWNd5I5MyypH00fcFtkQqs\"\r\n);\r\n\r\nconst Index = () => {\r\n  const [status, setStatus] = React.useState(\"ready\");\r\n\r\n  if (status === \"success\") {\r\n    return <div>Congrats on your empanadas!</div>;\r\n  }\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <CheckoutForm\r\n        success={() => {\r\n          setStatus(\"success\");\r\n        }}\r\n      />\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}