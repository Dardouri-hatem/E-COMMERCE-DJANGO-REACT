{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dardo\\\\Desktop\\\\e-commerce\\\\frontend\\\\src\\\\components\\\\Products\\\\OrderSummary.js\";\nimport React, { Component } from \"react\";\nimport { fetchCart, DeleteItemFromCart } from \"../../JS/actions/product\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport Spinner from \"../layout/spinner\";\n\nclass OrderSummary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.handleDelete = id => {\n      this.setState({\n        loading: true\n      });\n      this.props.DeleteItemFromCart(id);\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    const fetchData = async () => {\n      try {\n        await this.props.fetchCart(this.props.user.id);\n      } catch (err) {}\n    };\n\n    fetchData();\n    console.log(this.props.cart);\n  }\n\n  render() {\n    const {\n      cart\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.account.user,\n  cart: state.product.cart\n});\n\nexport default connect(mapStateToProps, {\n  fetchCart,\n  DeleteItemFromCart\n})(OrderSummary);","map":{"version":3,"sources":["C:/Users/dardo/Desktop/e-commerce/frontend/src/components/Products/OrderSummary.js"],"names":["React","Component","fetchCart","DeleteItemFromCart","connect","axios","Spinner","OrderSummary","state","loading","handleDelete","id","setState","props","componentDidMount","fetchData","user","err","console","log","cart","render","mapStateToProps","account","product"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,kBAApB,QAA8C,0BAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCO,KADmC,GAC7B;AAACC,MAAAA,OAAO,EAAG;AAAX,KAD6B;;AAAA,SAanCC,YAbmC,GAanBC,EAAD,IAAQ;AACrB,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAC;AAAT,OAAd;AACA,WAAKI,KAAL,CAAWV,kBAAX,CAA8BQ,EAA9B;AACA,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAC;AAAT,OAAd;AACD,KAjBkC;AAAA;;AAEnCK,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAM,KAAKF,KAAL,CAAWX,SAAX,CAAqB,KAAKW,KAAL,CAAWG,IAAX,CAAgBL,EAArC,CAAN;AACD,OAFD,CAEE,OAAOM,GAAP,EAAY,CAAE;AACjB,KAJD;;AAMAF,IAAAA,SAAS;AACTG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,IAAvB;AACD;;AAODC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA;AAAF,QAAW,KAAKP,KAAtB;AACA,UAAM;AAACJ,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBAEE;AAAA,gBACGC,OAAO,gBAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAF,GAAc;AADxB;AAAA;AAAA;AAAA;AAAA,YAFF;AAOD;;AA5BkC;;AA8BrC,MAAMa,eAAe,GAAId,KAAD,KAAY;AAClCQ,EAAAA,IAAI,EAAER,KAAK,CAACe,OAAN,CAAcP,IADc;AAElCI,EAAAA,IAAI,EAAEZ,KAAK,CAACgB,OAAN,CAAcJ;AAFc,CAAZ,CAAxB;;AAIA,eAAehB,OAAO,CAACkB,eAAD,EAAkB;AAAEpB,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CACbI,YADa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { fetchCart, DeleteItemFromCart } from \"../../JS/actions/product\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../layout/spinner\"\r\n\r\nclass OrderSummary extends Component {\r\n  state={loading : false}\r\n  componentDidMount() {\r\n    const fetchData = async () => {\r\n      try {\r\n        await this.props.fetchCart(this.props.user.id);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchData();\r\n    console.log(this.props.cart);\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    this.setState({loading:true})\r\n    this.props.DeleteItemFromCart(id);\r\n    this.setState({loading:false})\r\n  };\r\n  render() {\r\n    const { cart } = this.props;\r\n    const {loading} = this.state;\r\n    return (\r\n      \r\n      <div>\r\n        {loading ?<Spinner/>:(null)}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.account.user,\r\n  cart: state.product.cart,\r\n});\r\nexport default connect(mapStateToProps, { fetchCart, DeleteItemFromCart })(\r\n  OrderSummary\r\n);\r\n"]},"metadata":{},"sourceType":"module"}