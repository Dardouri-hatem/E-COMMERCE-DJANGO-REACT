{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dardo\\\\Desktop\\\\e-commerce\\\\frontend\\\\src\\\\components\\\\Products\\\\checkout.js\";\nimport React from \"react\";\nimport { CardElement, injectStripe, Elements, StripeProvider } from \"react-stripe-elements\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Order from \"./order\";\nimport { connect } from \"react-redux\";\n\nconst CheckoutForm = ({\n  success\n}, {\n  user,\n  cart\n}) => {\n  const handleSubmit = async event => {\n    event.preventDefault(); // const { error, paymentMethod } = await stripe.createPaymentMethod({\n    //   type: \"card\",\n    //   card: elements.getElement(CardElement),\n    // });\n    // if (!error) {\n    //   console.log(stripe);\n    //   const { id } = paymentMethod;\n    //   const user_id = 1;\n    //   try {\n    //     const config = {\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n    //         Accept: \"application/json\",\n    //       },\n    //     };\n    //     const { data } = await axios.post(\n    //       `http://127.0.0.1:8000/products/checkout/`,\n    //       { id, user_id },\n    //       config\n    //     );\n    //     console.log(data);\n    //     success();\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mt-3 mr-5\",\n    onSubmit: handleSubmit,\n    style: {\n      width: \"50%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Would you complete your purchase ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      style: {\n        width: \"100%\"\n      },\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CheckoutForm;\n\nconst mapSTP = state => ({\n  user: state.account.user,\n  cart: state.product.cart\n});\n\nconnect(mapSTP)(CheckoutForm);\nconst InjectedForm = injectStripe(CheckoutForm);\n_c2 = InjectedForm;\n\nconst WrappedForm = () => {\n  return /*#__PURE__*/_jsxDEV(StripeProvider, {\n    apiKey: \"pk_test_51HpWUdAHdk3LQCR4NdO1v4XGdIci4KVffOBjlY3p84Y65CDxa2wz3NgaGAxoLDAFDbh8UoAy85cqHWNd5I5MyypH00fcFtkQqs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Elements, {\n        children: /*#__PURE__*/_jsxDEV(InjectedForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = WrappedForm;\nexport default WrappedForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"InjectedForm\");\n$RefreshReg$(_c3, \"WrappedForm\");","map":{"version":3,"sources":["C:/Users/dardo/Desktop/e-commerce/frontend/src/components/Products/checkout.js"],"names":["React","CardElement","injectStripe","Elements","StripeProvider","Button","axios","Order","connect","CheckoutForm","success","user","cart","handleSubmit","event","preventDefault","width","mapSTP","state","account","product","InjectedForm","WrappedForm"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,cAJF,QAKO,uBALP;AAMA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAd,KAAiC;AACpD,QAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN,GADoC,CAGpC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA/BD;;AAiCA,sBACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,QAAQ,EAAEF,YAFZ;AAGE,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAHT;AAAA,4BAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/CD;;KAAMP,Y;;AAgDN,MAAMQ,MAAM,GAAIC,KAAD,KAAY;AACzBP,EAAAA,IAAI,EAAEO,KAAK,CAACC,OAAN,CAAcR,IADK;AAEzBC,EAAAA,IAAI,EAAEM,KAAK,CAACE,OAAN,CAAcR;AAFK,CAAZ,CAAf;;AAIAJ,OAAO,CAACS,MAAD,CAAP,CAAgBR,YAAhB;AAEA,MAAMY,YAAY,GAAGnB,YAAY,CAACO,YAAD,CAAjC;MAAMY,Y;;AAEN,MAAMC,WAAW,GAAG,MAAM;AACxB,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAC,6GAAvB;AAAA,2BACE;AAAA,6BACE,QAAC,QAAD;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;MAAMA,W;AAYN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  CardElement,\r\n  injectStripe,\r\n  Elements,\r\n  StripeProvider,\r\n} from \"react-stripe-elements\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Order from \"./order\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CheckoutForm = ({ success }, { user, cart }) => {\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n    //   type: \"card\",\r\n    //   card: elements.getElement(CardElement),\r\n    // });\r\n\r\n    // if (!error) {\r\n    //   console.log(stripe);\r\n    //   const { id } = paymentMethod;\r\n    //   const user_id = 1;\r\n    //   try {\r\n    //     const config = {\r\n    //       headers: {\r\n    //         \"Content-Type\": \"application/json\",\r\n    //         Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n    //         Accept: \"application/json\",\r\n    //       },\r\n    //     };\r\n    //     const { data } = await axios.post(\r\n    //       `http://127.0.0.1:8000/products/checkout/`,\r\n    //       { id, user_id },\r\n    //       config\r\n    //     );\r\n    //     console.log(data);\r\n    //     success();\r\n    //   } catch (error) {\r\n    //     console.log(error);\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"mt-3 mr-5\"\r\n      onSubmit={handleSubmit}\r\n      style={{ width: \"50%\" }}\r\n    >\r\n      <h3>Would you complete your purchase ?</h3>\r\n      <CardElement />\r\n      <Button type=\"submit\" style={{ width: \"100%\" }}>\r\n        Pay\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\nconst mapSTP = (state) => ({\r\n  user: state.account.user,\r\n  cart: state.product.cart,\r\n});\r\nconnect(mapSTP)(CheckoutForm);\r\n\r\nconst InjectedForm = injectStripe(CheckoutForm);\r\n\r\nconst WrappedForm = () => {\r\n  return (\r\n    <StripeProvider apiKey=\"pk_test_51HpWUdAHdk3LQCR4NdO1v4XGdIci4KVffOBjlY3p84Y65CDxa2wz3NgaGAxoLDAFDbh8UoAy85cqHWNd5I5MyypH00fcFtkQqs\">\r\n      <div>\r\n        <Elements>\r\n          <InjectedForm />\r\n        </Elements>\r\n      </div>\r\n    </StripeProvider>\r\n  );\r\n};\r\n\r\nexport default WrappedForm;\r\n"]},"metadata":{},"sourceType":"module"}