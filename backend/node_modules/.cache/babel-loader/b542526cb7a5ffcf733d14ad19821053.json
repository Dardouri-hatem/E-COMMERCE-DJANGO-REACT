{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dardo\\\\Desktop\\\\e-commerce\\\\frontend\\\\src\\\\components\\\\Products\\\\checkoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\n\nconst CheckoutForm = ({\n  success,\n  user\n}) => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [countries, setCountries] = React.useState([]);\n  const [data, setData] = React.useState({\n    apartment_address: \"\",\n    country: \"Country\",\n    street_address: \"\",\n    zip: \"\"\n  });\n\n  const handleFormatCountries = countries => {\n    const keys = Object.keys(countries);\n    return keys.map(k => {\n      return {\n        label: countries[k],\n        value: k\n      };\n    });\n  };\n\n  React.useEffect(() => {\n    axios.get(\"http://127.0.0.1:8000/products/country_list/\").then(res => setCountries(handleFormatCountries(res.data)));\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      const user_id = user.id;\n\n      try {\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n            Accept: \"application/json\"\n          }\n        };\n        const {\n          data\n        } = await axios.post(`http://127.0.0.1:8000/products/checkout/`, {\n          payment_method_id: paymentMethod.id,\n          user_id\n        }, config);\n        console.log(data);\n        success();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleChange = e => {\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-50 m-5\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"You need to add addresses before you can complete your purchase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Street address\",\n          name: \"street_address\",\n          value: data.street_address,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Apartment address\",\n          name: \"apartment_address\",\n          value: data.apartment_address,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          options: countries,\n          name: \"country\",\n          placeholder: \"Country\",\n          name: \"country\",\n          value: data.country,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Postal code\",\n          name: \"zip\",\n          value: data.zip,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mt-3 mr-5\",\n      onSubmit: handleSubmit,\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-3\",\n        children: \"Would you complete your purchase ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-3\",\n        type: \"submit\",\n        disabled: !stripe,\n        style: {\n          width: \"100%\"\n        },\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"mIKuh/MQNm6vya5DW8KejXUYZiA=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\n\nconst mapSTP = state => ({\n  user: state.account.user,\n  cart: state.product.cart\n});\n\nexport default connect(mapSTP)(CheckoutForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["C:/Users/dardo/Desktop/e-commerce/frontend/src/components/Products/checkoutForm.js"],"names":["React","CardElement","useStripe","useElements","Button","Form","axios","connect","Select","CheckoutForm","success","user","stripe","elements","countries","setCountries","useState","data","setData","apartment_address","country","street_address","zip","handleFormatCountries","keys","Object","map","k","label","value","useEffect","get","then","res","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","user_id","id","config","headers","Authorization","localStorage","getItem","Accept","post","payment_method_id","console","log","handleChange","e","target","name","width","mapSTP","state","account","cart","product"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n\r\nconst CheckoutForm = ({ success, user }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [countries, setCountries] = React.useState([]);\r\n  const [data, setData] = React.useState({\r\n    apartment_address: \"\",\r\n    country: \"Country\",\r\n    street_address: \"\",\r\n    zip: \"\",\r\n  });\r\n\r\n  const handleFormatCountries = (countries) => {\r\n    const keys = Object.keys(countries);\r\n    return keys.map((k) => {\r\n      return {\r\n        label: countries[k],\r\n        value: k,\r\n      };\r\n    });\r\n  };\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/products/country_list/\")\r\n      .then((res) => setCountries(handleFormatCountries(res.data)));\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (!error) {\r\n      const user_id = user.id;\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n            Accept: \"application/json\",\r\n          },\r\n        };\r\n        const { data } = await axios.post(\r\n          `http://127.0.0.1:8000/products/checkout/`,\r\n          { payment_method_id: paymentMethod.id, user_id },\r\n          config\r\n        );\r\n        console.log(data);\r\n        success();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-50 m-5\">\r\n      <Form>\r\n        <h6>You need to add addresses before you can complete your purchase</h6>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Street address\"\r\n            name=\"street_address\"\r\n            value={data.street_address}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Apartment address\"\r\n            name=\"apartment_address\"\r\n            value={data.apartment_address}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Select\r\n            options={countries}\r\n            name=\"country\"\r\n            placeholder=\"Country\"\r\n            name=\"country\"\r\n            value={data.country}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Postal code\"\r\n            name=\"zip\"\r\n            value={data.zip}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <form\r\n        className=\"mt-3 mr-5\"\r\n        onSubmit={handleSubmit}\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        <h4 className=\"mb-3\">Would you complete your purchase ?</h4>\r\n        <CardElement />\r\n        <Button\r\n          className=\"mt-3\"\r\n          type=\"submit\"\r\n          disabled={!stripe}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          Pay\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapSTP = (state) => ({\r\n  user: state.account.user,\r\n  cart: state.product.cart,\r\n});\r\nexport default connect(mapSTP)(CheckoutForm);\r\n"]},"metadata":{},"sourceType":"module"}